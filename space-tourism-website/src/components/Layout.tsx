import Header from '@/src/components/Header';
import { ReactNode, useEffect, useRef, useState } from 'react';
import Head from 'next/head';
import { Box, Collapse, styled, useTheme } from '@mui/material';
import { useRouter } from 'next/router';
import PerfectScrollbar from 'react-perfect-scrollbar';
import { ResizeObserver } from '@juggle/resize-observer';

import 'react-perfect-scrollbar/dist/css/styles.css';
import LoadingScreen from '@/src/components/LoadingScreen';

const Main = styled('main')(() => ({
  minHeight: '100vh',
  backgroundSize: 'cover'
}));

const scrollStyles = (unit = 4) => ({
  '& .ps__thumb-y': {
    width: unit + 'px'
  },
  '& .ps__thumb-x': {
    height: unit + 'px'
  }
});

export default function Layout({ children }: { children: ReactNode }) {
  const theme = useTheme();
  const router = useRouter();
  const psRef = useRef<PerfectScrollbar | null>(null);
  const divRef = useRef(null);
  const [loading, setLoading] = useState(true);
  const [showContent, setShowContent] = useState(false);

  const page = router.asPath === '/' ? 'home' : router.asPath.replace('/', '');

  useEffect(() => {
    setLoading(false);
    const div = divRef.current;

    const observer = new ResizeObserver(() => {
      const ps = psRef.current;
      if (ps) {
        ps.updateScroll();
      }
    });

    if (div) {
      observer.observe(div);
    }

    return () => {
      if (div) {
        observer.unobserve(div);
      }
    };
  }, []);

  return (
    <>
      <Head>
        <meta name='description' content='Generated by create next app' />
        <meta name='viewport' content='width=device-width, initial-scale=1' />
        <link rel='icon' type='image/png' sizes='32x32' href='/favicon-32x32.png' />

        <title>Space tourism website | {loading || !showContent ? 'loading...' : page}</title>
      </Head>
      <Header />

      <Box
        component={PerfectScrollbar}
        sx={{
          height: '100vh',
          '& .ps--clicking': scrollStyles(6),
          ...scrollStyles(),
          '& .ps__rail-y, & .ps__rail-x': {
            '&:hover': scrollStyles(6),
            background: 'transparent !important',
            zIndex: theme => theme.zIndex.appBar * 2
          }
        }}
        ref={psRef}
        options={{
          suppressScrollX: true
        }}
      >
        <Collapse in={showContent} timeout={1000} appear={false}>
          <Main
            ref={divRef}
            sx={{
              backgroundImage: `url(/${page}/background-${page}-desktop.jpg)`,
              [theme.breakpoints.down('lg')]: {
                backgroundImage: `url(/${page}/background-${page}-tablet.jpg)`
              },
              [theme.breakpoints.down('sm')]: {
                backgroundImage: `url(/${page}/background-${page}-mobile.jpg)`
              }
            }}
          >
            {children}
          </Main>
        </Collapse>
      </Box>
      <LoadingScreen
        onTransitionEnd={() => {
          setShowContent(true);
        }}
        loading={loading}
      />
    </>
  );
}
